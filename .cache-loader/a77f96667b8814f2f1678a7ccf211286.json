{"remainingRequest":"/Users/serqeycheremisin/ieltof/node_modules/babel-loader/lib/index.js!/Users/serqeycheremisin/ieltof/src/components/ChatPage/ChatWindow/index.js","dependencies":[{"path":"/Users/serqeycheremisin/ieltof/src/components/ChatPage/ChatWindow/index.js","mtime":1524171108399},{"path":"/Users/serqeycheremisin/ieltof/.babelrc","mtime":1523141114949},{"path":"/Users/serqeycheremisin/ieltof/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/serqeycheremisin/ieltof/node_modules/babel-loader/lib/index.js","mtime":1520329890000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _ChatWindow = require(\"./ChatWindow.css\");\n\nvar _ChatWindow2 = _interopRequireDefault(_ChatWindow);\n\nvar _classnames = require(\"classnames\");\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _ReceivedMessage = require(\"components/ChatPage/ChatWindow/ReceivedMessage\");\n\nvar _ReceivedMessage2 = _interopRequireDefault(_ReceivedMessage);\n\nvar _SendMessage = require(\"components/ChatPage/ChatWindow/SendMessage\");\n\nvar _SendMessage2 = _interopRequireDefault(_SendMessage);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ChatPage = function (_React$Component) {\n    _inherits(ChatPage, _React$Component);\n\n    function ChatPage(props) {\n        _classCallCheck(this, ChatPage);\n\n        return _possibleConstructorReturn(this, (ChatPage.__proto__ || Object.getPrototypeOf(ChatPage)).call(this, props));\n    }\n\n    _createClass(ChatPage, [{\n        key: \"render\",\n        value: function render() {\n            return _react2.default.createElement(\n                \"div\",\n                { className: (0, _classnames2.default)(_defineProperty({}, _ChatWindow2.default.right_inbox, true)) },\n                _react2.default.createElement(\n                    \"div\",\n                    { className: (0, _classnames2.default)(_defineProperty({}, _ChatWindow2.default.top_bar_messages, true)) },\n                    _react2.default.createElement(\n                        \"div\",\n                        {\n                            \"ng-if\": \"conversationService.selectedConversation.type === CONSTANTS.CONVERSATIONS.ONE_TO_ONE_CONVERSATION\" },\n                        _react2.default.createElement(\n                            \"a\",\n                            { \"class\": \"link-to-profile\",\n                                \"ng-click\": \"userCacheService.clearAndSetUser(conversationService.selectedConversation.user)\",\n                                \"ng-href\": \"/user/1308722\", href: \"/user/1308722\" },\n                            \"Polyane\"\n                        ),\n                        _react2.default.createElement(\n                            \"is-online-green-button\",\n                            { \"ng-if\": \"!conversationService.selectedConversation.user.isConnected\",\n                                \"class\": \"text-last-connection\",\n                                user: \"conversationService.selectedConversation.user\", style: {} },\n                            _react2.default.createElement(\n                                \"span\",\n                                { style: { fontSize: 12, color: '#9AA2A7' } },\n                                \"a day ago\"\n                            )\n                        )\n                    )\n                ),\n                _react2.default.createElement(\n                    \"div\",\n                    { className: (0, _classnames2.default)(_defineProperty({}, _ChatWindow2.default.display_chat, true)) },\n                    _react2.default.createElement(\n                        \"div\",\n                        { className: (0, _classnames2.default)(_defineProperty({}, _ChatWindow2.default.user_information, true)) },\n                        _react2.default.createElement(\n                            \"div\",\n                            { style: { position: 'relative' } },\n                            _react2.default.createElement(\n                                \"div\",\n                                null,\n                                _react2.default.createElement(\n                                    \"a\",\n                                    null,\n                                    _react2.default.createElement(\"img\", { className: (0, _classnames2.default)(_defineProperty({}, _ChatWindow2.default.profile_picture_conversation, true)),\n                                        style: { width: 115 },\n                                        src: \"http://cdn-storage.speaky.com/image/78f28034-f9af-4c9f-b704-b7c0e400ead6.jpeg?resize-width=100&resize-height=100\" })\n                                )\n                            )\n                        )\n                    ),\n                    _react2.default.createElement(\n                        \"div\",\n                        { \"class\": \"text-center pt10\" },\n                        _react2.default.createElement(_SendMessage2.default, null),\n                        _react2.default.createElement(_ReceivedMessage2.default, null)\n                    )\n                ),\n                _react2.default.createElement(\n                    \"div\",\n                    { className: (0, _classnames2.default)(_defineProperty({}, _ChatWindow2.default.add_message, true)) },\n                    _react2.default.createElement(\n                        \"form\",\n                        { \"class\": \"ng-pristine ng-valid ng-valid-maxlength\" },\n                        _react2.default.createElement(\n                            \"div\",\n                            { \"class\": \"input-text-chat-container\" },\n                            _react2.default.createElement(\n                                \"div\",\n                                null,\n                                _react2.default.createElement(\n                                    \"span\",\n                                    { \"ng-if\": \"!conversationService.selectedConversation.notInitialized\" },\n                                    _react2.default.createElement(\"textarea\", { \"ng-if\": \"voiceNoteMenu === 0\",\n                                        \"ng-enter\": \"conversationService.postMessage(vm.message, conversationService.selectedConversation); vm.message = ''; modalReferralSendMessage()\",\n                                        \"send-event-for-chat\": \"\", \"is-writing-model\": \"vm\",\n                                        \"ng-disabled\": \"!connectionStateService.hasConnection\", id: \"textarea-messages\",\n                                        maxlength: \"1000\",\n                                        \"ng-focus\": \"scrollToBottomOfTheChatOnFocus()\", style: { height: 49 },\n                                        \"ng-model\": \"vm.message\",\n                                        \"class\": \"newmessage type-message darker-scrollbar ng-pristine ng-untouched ng-valid ng-empty ng-valid-maxlength\",\n                                        placeholder: \"Write a message\" }),\n                                    _react2.default.createElement(\"div\", {\n                                        \"ng-if\": \"conversationService.isConversationAccepted(conversationService.selectedConversation) && !vm.message && connectionStateService.hasConnection && voiceNoteMenu === 0\",\n                                        \"ng-click\": \"nextStep()\", \"class\": \"fa fa-microphone toggle btn-voice-note\" })\n                                )\n                            )\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n\n    return ChatPage;\n}(_react2.default.Component);\n\nexports.default = ChatPage;",{"version":3,"sources":["src/components/ChatPage/ChatWindow/index.js"],"names":["ChatPage","props","right_inbox","top_bar_messages","fontSize","color","display_chat","user_information","position","profile_picture_conversation","width","add_message","height","Component"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;IAEqBA,Q;;;AAEjB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,mHACTA,KADS;AAElB;;;;iCAGQ;AACL,mBACI;AAAA;AAAA,kBAAK,WAAW,8CAAa,qBAAOC,WAApB,EAAkC,IAAlC,EAAhB;AACI;AAAA;AAAA,sBAAK,WAAW,8CAAa,qBAAOC,gBAApB,EAAuC,IAAvC,EAAhB;AACI;AAAA;AAAA;AACI,qCAAM,mGADV;AAEI;AAAA;AAAA,8BAAG,SAAM,iBAAT;AACG,4CAAS,iFADZ;AAEG,2CAAQ,eAFX,EAE2B,MAAK,eAFhC;AAAA;AAAA,yBAFJ;AAOI;AAAA;AAAA,8BAAwB,SAAM,4DAA9B;AACwB,yCAAM,sBAD9B;AAEwB,sCAAK,+CAF7B,EAE6E,OAAO,EAFpF;AAGI;AAAA;AAAA,kCAAM,OAAO,EAACC,UAAU,EAAX,EAAeC,OAAO,SAAtB,EAAb;AAAA;AAAA;AAHJ;AAPJ;AADJ,iBADJ;AAiBI;AAAA;AAAA,sBAAK,WAAW,8CAAa,qBAAOC,YAApB,EAAmC,IAAnC,EAAhB;AACI;AAAA;AAAA,0BAAK,WAAW,8CAAa,qBAAOC,gBAApB,EAAuC,IAAvC,EAAhB;AACI;AAAA;AAAA,8BAAK,OAAO,EAACC,UAAU,UAAX,EAAZ;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AACI,2EAAK,WAAW,8CAAa,qBAAOC,4BAApB,EAAmD,IAAnD,EAAhB;AACK,+CAAO,EAACC,OAAO,GAAR,EADZ;AAEK,6CAAI,kHAFT;AADJ;AADJ;AADJ;AADJ,qBADJ;AAYI;AAAA;AAAA,0BAAK,SAAM,kBAAX;AACI,kFADJ;AAEI;AAFJ;AAZJ,iBAjBJ;AAkCI;AAAA;AAAA,sBAAK,WAAW,8CAAa,qBAAOC,WAApB,EAAkC,IAAlC,EAAhB;AACI;AAAA;AAAA,0BAAM,SAAM,yCAAZ;AACI;AAAA;AAAA,8BAAK,SAAM,2BAAX;AACI;AAAA;AAAA;AACG;AAAA;AAAA,sCAAM,SAAM,0DAAZ;AACI,gFAAU,SAAM,qBAAhB;AACU,oDAAS,oIADnB;AAEU,+DAAoB,EAF9B,EAEiC,oBAAiB,IAFlD;AAGU,uDAAY,uCAHtB,EAG8D,IAAG,mBAHjE;AAIU,mDAAU,MAJpB;AAKU,oDAAS,kCALnB,EAKsD,OAAO,EAACC,QAAQ,EAAT,EAL7D;AAMU,oDAAS,YANnB;AAOU,iDAAM,wGAPhB;AAQU,qDAAY,iBARtB,GADJ;AAYI;AACI,iDAAM,oKADV;AAEI,oDAAS,YAFb,EAE0B,SAAM,wCAFhC;AAZJ;AADH;AADJ;AADJ;AADJ;AAlCJ,aADJ;AA+DH;;;;EAvEiC,gBAAMC,S;;kBAAvBb,Q","file":"index.js","sourceRoot":"/Users/serqeycheremisin/ieltof","sourcesContent":["import React, {Component} from \"react\";\nimport styles from \"./ChatWindow.css\";\nimport classNames from \"classnames\";\n\nimport ReceivedMessage from \"components/ChatPage/ChatWindow/ReceivedMessage\";\nimport SendMessage from \"components/ChatPage/ChatWindow/SendMessage\";\n\nexport default class ChatPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n\n    render() {\n        return (\n            <div className={classNames({[styles.right_inbox]: true})}>\n                <div className={classNames({[styles.top_bar_messages]: true})}>\n                    <div\n                        ng-if=\"conversationService.selectedConversation.type === CONSTANTS.CONVERSATIONS.ONE_TO_ONE_CONVERSATION\">\n                        <a class=\"link-to-profile\"\n                           ng-click=\"userCacheService.clearAndSetUser(conversationService.selectedConversation.user)\"\n                           ng-href=\"/user/1308722\" href=\"/user/1308722\">\n                            Polyane\n                        </a>\n                        <is-online-green-button ng-if=\"!conversationService.selectedConversation.user.isConnected\"\n                                                class=\"text-last-connection\"\n                                                user=\"conversationService.selectedConversation.user\" style={{}}>\n                            <span style={{fontSize: 12, color: '#9AA2A7'}}>a day ago\n                            </span>\n                        </is-online-green-button>\n                    </div>\n                </div>\n                <div className={classNames({[styles.display_chat]: true})}>\n                    <div className={classNames({[styles.user_information]: true})}>\n                        <div style={{position: 'relative'}}>\n                            <div>\n                                <a>\n                                    <img className={classNames({[styles.profile_picture_conversation]: true})}\n                                         style={{width: 115}}\n                                         src=\"http://cdn-storage.speaky.com/image/78f28034-f9af-4c9f-b704-b7c0e400ead6.jpeg?resize-width=100&amp;resize-height=100\"/>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"text-center pt10\">\n                        <SendMessage/>\n                        <ReceivedMessage/>\n                    </div>\n                </div>\n                <div className={classNames({[styles.add_message]: true})}>\n                    <form class=\"ng-pristine ng-valid ng-valid-maxlength\">\n                        <div class=\"input-text-chat-container\">\n                            <div>\n                               <span ng-if=\"!conversationService.selectedConversation.notInitialized\">\n                                   <textarea ng-if=\"voiceNoteMenu === 0\"\n                                             ng-enter=\"conversationService.postMessage(vm.message, conversationService.selectedConversation); vm.message = ''; modalReferralSendMessage()\"\n                                             send-event-for-chat=\"\" is-writing-model=\"vm\"\n                                             ng-disabled=\"!connectionStateService.hasConnection\" id=\"textarea-messages\"\n                                             maxlength=\"1000\"\n                                             ng-focus=\"scrollToBottomOfTheChatOnFocus()\" style={{height: 49}}\n                                             ng-model=\"vm.message\"\n                                             class=\"newmessage type-message darker-scrollbar ng-pristine ng-untouched ng-valid ng-empty ng-valid-maxlength\"\n                                             placeholder=\"Write a message\">\n\n                                   </textarea>\n                                   <div\n                                       ng-if=\"conversationService.isConversationAccepted(conversationService.selectedConversation) &amp;&amp; !vm.message &amp;&amp; connectionStateService.hasConnection &amp;&amp; voiceNoteMenu === 0\"\n                                       ng-click=\"nextStep()\" class=\"fa fa-microphone toggle btn-voice-note\">\n\n                                   </div>\n                               </span>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n\n}\n"]}]}