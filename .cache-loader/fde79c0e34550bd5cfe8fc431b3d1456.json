{"remainingRequest":"/Users/serqeycheremisin/ieltof/node_modules/babel-loader/lib/index.js!/Users/serqeycheremisin/ieltof/src/stores/UserStore.js","dependencies":[{"path":"/Users/serqeycheremisin/ieltof/src/stores/UserStore.js","mtime":1526139117820},{"path":"/Users/serqeycheremisin/ieltof/.babelrc","mtime":1523141114949},{"path":"/Users/serqeycheremisin/ieltof/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/serqeycheremisin/ieltof/node_modules/babel-loader/lib/index.js","mtime":1520329890000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _events = require(\"events\");\n\nvar _dispatcher = require(\"../dispatcher\");\n\nvar _dispatcher2 = _interopRequireDefault(_dispatcher);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar UserStore = function (_EventEmitter) {\n    _inherits(UserStore, _EventEmitter);\n\n    function UserStore() {\n        _classCallCheck(this, UserStore);\n\n        var _this = _possibleConstructorReturn(this, (UserStore.__proto__ || Object.getPrototypeOf(UserStore)).call(this));\n\n        _this.state = {\n            profile: {},\n            users: [],\n            friends: new Map(),\n            dialog: null,\n            lastDialog: 0\n        };\n        return _this;\n    }\n\n    _createClass(UserStore, [{\n        key: \"setLastDialog\",\n        value: function setLastDialog(key) {\n            this.state.lastDialog = key;\n        }\n    }, {\n        key: \"getProfile\",\n        value: function getProfile() {\n            return this.state.profile;\n        }\n    }, {\n        key: \"emitUsersEvent\",\n        value: function emitUsersEvent() {\n            this.emit(\"get_users_event\");\n        }\n    }, {\n        key: \"getUsers\",\n        value: function getUsers() {\n            return this.state.users;\n        }\n    }, {\n        key: \"emitChatPage\",\n        value: function emitChatPage() {\n            this.emit(\"get_friends_event\");\n        }\n    }, {\n        key: \"getFriends\",\n        value: function getFriends() {\n            return this.state.friends;\n        }\n    }, {\n        key: \"getFriend\",\n        value: function getFriend(id) {\n            return this.state.friends.get(id);\n        }\n    }, {\n        key: \"emitOpenDialog\",\n        value: function emitOpenDialog() {\n            this.emit(\"open_dialog\");\n        }\n    }, {\n        key: \"getDialog\",\n        value: function getDialog() {\n            return this.state.dialog;\n        }\n    }, {\n        key: \"emitAcceptFriendship\",\n        value: function emitAcceptFriendship() {\n            this.emit(\"accept_friendship\");\n        }\n    }, {\n        key: \"emitIgnoreFriendship\",\n        value: function emitIgnoreFriendship() {\n            this.emit(\"ignore_friendship\");\n        }\n    }, {\n        key: \"handleActions\",\n        value: function handleActions(action) {\n            var _this2 = this;\n\n            switch (action.type) {\n                case \"GET_USER_EVENT\":\n                    console.log(\"GET_USER_EVENT\");\n                    console.log(action.user);\n                    this.state.profile = action.user;\n                    this.emit(\"get_user_event\");\n                    break;\n\n                case \"GET_ALL_USERS_EVENT\":\n                    console.log(action.users);\n                    this.state.users = action.users;\n                    action.users.map(function (el, index) {\n                        if (el.Id === _this2.state.profile.Id) {\n                            _this2.state.users.splice(index, 1);\n                            return;\n                        }\n                    });\n                    this.emitUsersEvent();\n                    break;\n\n                case \"GET_ALL_FRIENDS\":\n                    action.friends.map(function (el) {\n                        el.who = el.user_id;\n                        el.friend_id = _this2.state.profile.Id === el.user_id ? el.friend_id : el.user_id;\n                        el.user_id = _this2.state.profile.Id;\n                        _this2.state.friends.set(el.friend_id, el);\n                    });\n\n                    this.emitChatPage();\n                    break;\n\n                case \"OPEN_DIALOG\":\n                    this.state.dialog = action.key;\n                    this.emitOpenDialog();\n                    break;\n\n                case \"REQUEST_FRIEND\":\n                    this.emit(\"request_friend_\" + action.person);\n                    break;\n\n                case \"ACCEPT_FRIENDSHIP\":\n                    this.state.friends.get(action.dialog.friend_id).accept = true;\n                    this.emitAcceptFriendship();\n                    break;\n\n                case \"IGNORE_FRIENDSHIP\":\n                    this.state.dialog = null;\n                    this.state.friends.delete(action.dialog.friend_id);\n                    this.emitIgnoreFriendship();\n                    break;\n\n                case \"REVIEVE_NEW_MESSAGE\":\n                    if (this.state.profile.Id === action.message.UserId) {\n                        if (this.state.friends.get(this.state.lastDialog).messages === null || this.state.friends.get(this.state.lastDialog).messages === undefined) {\n                            this.state.friends.get(this.state.lastDialog).messages = [];\n                        }\n\n                        this.state.friends.get(this.state.lastDialog).messages.push(action.message);\n                        this.emit(\"revieve_new_message_\" + this.state.lastDialog);\n                    } else {\n                        this.state.friends.get(action.message.UserId).messages.push(action.message);\n                        this.emit(\"revieve_new_message_\" + action.message.UserId);\n                    }\n\n                    break;\n                default:\n            }\n        }\n    }]);\n\n    return UserStore;\n}(_events.EventEmitter);\n\nvar userStore = new UserStore();\n_dispatcher2.default.register(userStore.handleActions.bind(userStore));\nexports.default = userStore;",{"version":3,"sources":["src/stores/UserStore.js"],"names":["UserStore","state","profile","users","friends","Map","dialog","lastDialog","key","emit","id","get","action","type","console","log","user","map","el","index","Id","splice","emitUsersEvent","who","user_id","friend_id","set","emitChatPage","emitOpenDialog","person","accept","emitAcceptFriendship","delete","emitIgnoreFriendship","message","UserId","messages","undefined","push","userStore","register","handleActions","bind"],"mappings":"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","file":"UserStore.js","sourceRoot":"/Users/serqeycheremisin/ieltof","sourcesContent":["import React from \"react\";\nimport {EventEmitter} from \"events\";\nimport dispatcher from \"../dispatcher\";\n\n\nclass UserStore extends EventEmitter {\n    constructor() {\n        super();\n        this.state = {\n            profile: {},\n            users: [],\n            friends: new Map(),\n            dialog: null,\n            lastDialog: 0\n        }\n    }\n\n    setLastDialog(key) {\n        this.state.lastDialog = key;\n    }\n\n    getProfile() {\n        return this.state.profile;\n    }\n\n    emitUsersEvent() {\n        this.emit(\"get_users_event\");\n    }\n\n    getUsers() {\n        return this.state.users;\n    }\n\n    emitChatPage() {\n        this.emit(\"get_friends_event\")\n    }\n\n    getFriends() {\n        return this.state.friends;\n    }\n\n    getFriend(id) {\n        return this.state.friends.get(id);\n    }\n\n    emitOpenDialog() {\n        this.emit(\"open_dialog\")\n    }\n\n    getDialog() {\n        return this.state.dialog;\n    }\n\n    emitAcceptFriendship() {\n        this.emit(\"accept_friendship\");\n    }\n\n    emitIgnoreFriendship() {\n        this.emit(\"ignore_friendship\");\n    }\n\n    handleActions(action) {\n        switch (action.type) {\n            case \"GET_USER_EVENT\":\n                console.log(\"GET_USER_EVENT\");\n                console.log(action.user);\n                this.state.profile = action.user;\n                this.emit(\"get_user_event\")\n                break;\n\n            case \"GET_ALL_USERS_EVENT\":\n                console.log(action.users);\n                this.state.users = action.users;\n                action.users.map((el, index) => {\n                    if (el.Id === this.state.profile.Id) {\n                        this.state.users.splice(index, 1);\n                        return;\n                    }\n                });\n                this.emitUsersEvent();\n                break;\n\n            case \"GET_ALL_FRIENDS\":\n                action.friends.map((el => {\n                    el.who = el.user_id;\n                    el.friend_id = this.state.profile.Id === el.user_id ? el.friend_id : el.user_id;\n                    el.user_id = this.state.profile.Id;\n                    this.state.friends.set(el.friend_id, el);\n                }));\n\n                this.emitChatPage();\n                break;\n\n            case \"OPEN_DIALOG\":\n                this.state.dialog = action.key;\n                this.emitOpenDialog();\n                break;\n\n            case \"REQUEST_FRIEND\":\n                this.emit(\"request_friend_\" + action.person);\n                break;\n\n            case \"ACCEPT_FRIENDSHIP\":\n                this.state.friends.get(action.dialog.friend_id).accept = true;\n                this.emitAcceptFriendship();\n                break;\n\n            case \"IGNORE_FRIENDSHIP\":\n                this.state.dialog = null;\n                this.state.friends.delete(action.dialog.friend_id);\n                this.emitIgnoreFriendship();\n                break;\n\n            case \"REVIEVE_NEW_MESSAGE\":\n                if (this.state.profile.Id === action.message.UserId) {\n                    if (this.state.friends.get(this.state.lastDialog).messages === null ||\n                        this.state.friends.get(this.state.lastDialog).messages === undefined) {\n                        this.state.friends.get(this.state.lastDialog).messages = [];\n                    }\n\n                    this.state.friends.get(this.state.lastDialog).messages.push(action.message);\n                    this.emit(\"revieve_new_message_\" + this.state.lastDialog);\n                } else {\n                    this.state.friends.get(action.message.UserId).messages.push(action.message);\n                    this.emit(\"revieve_new_message_\" + action.message.UserId);\n                }\n\n                break;\n            default:\n        }\n    }\n}\n\nconst userStore = new UserStore;\ndispatcher.register(userStore.handleActions.bind(userStore));\nexport default userStore;"]}]}