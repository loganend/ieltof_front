{"remainingRequest":"/Users/serqeycheremisin/ieltof/node_modules/babel-loader/lib/index.js!/Users/serqeycheremisin/ieltof/src/services/UserServices.js","dependencies":[{"path":"/Users/serqeycheremisin/ieltof/src/services/UserServices.js","mtime":1526135118758},{"path":"/Users/serqeycheremisin/ieltof/.babelrc","mtime":1523141114949},{"path":"/Users/serqeycheremisin/ieltof/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/serqeycheremisin/ieltof/node_modules/babel-loader/lib/index.js","mtime":1520329890000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.faceToFaceTest = faceToFaceTest;\nexports.getUser = getUser;\nexports.getOnlineUsers = getOnlineUsers;\nexports.getAllUsers = getAllUsers;\nexports.sendRequestToFriends = sendRequestToFriends;\nexports.getFriends = getFriends;\nexports.openDialog = openDialog;\nexports.acceptFriendship = acceptFriendship;\nexports.ignoreFriendship = ignoreFriendship;\n\nvar _dispatcher = require(\"../dispatcher\");\n\nvar _dispatcher2 = _interopRequireDefault(_dispatcher);\n\nvar _config = require(\"../config/config\");\n\nvar _UserStore = require(\"../stores/UserStore\");\n\nvar _UserStore2 = _interopRequireDefault(_UserStore);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction faceToFaceTest() {}\n\nfunction getUser(state) {\n\n    console.log(state);\n    var request = {\n        facebook_id: state.user.id,\n        name: state.user.name,\n        url: state.avatar\n    };\n    console.log(request);\n\n    fetch((0, _config.getUrl)('/api2/user'), {\n        method: 'post',\n        body: JSON.stringify(request)\n    }).then(function (response) {\n        console.log(response.status);\n        if (response.status === 200) {\n            return response.json();\n        }\n    }).then(function (json) {\n        console.log(json);\n        _dispatcher2.default.dispatch({\n            type: \"GET_USER_EVENT\",\n            user: json\n        });\n    }).catch(function (err) {\n        console.log(err);\n    });\n}\n\nfunction getOnlineUsers() {\n\n    fetch((0, _config.getUrl)('/api2/users/online'), {\n        method: 'get'\n    }).then(function (response) {\n        console.log(response.status);\n\n        if (response.status === 200) {\n            return response.json();\n        }\n    }).then(function (json) {\n        console.log(json);\n        _dispatcher2.default.dispatch({\n            type: \"GET_ALL_USERS_EVENT\",\n            users: json\n        });\n    }).catch(function (err) {\n        console.log(err);\n    });\n}\n\nfunction getAllUsers() {\n\n    fetch((0, _config.getUrl)('/api2/users'), {\n        method: 'get'\n    }).then(function (response) {\n        console.log(response.status);\n\n        if (response.status === 200) {\n            return response.json();\n        }\n    }).then(function (json) {\n        console.log(json);\n        _dispatcher2.default.dispatch({\n            type: \"GET_ALL_USERS_EVENT\",\n            users: json\n        });\n    }).catch(function (err) {\n        console.log(err);\n    });\n}\n\nfunction sendRequestToFriends(from_id, to_id) {\n\n    var request = {\n        from_id: from_id,\n        to_id: to_id\n    };\n    console.log(request);\n\n    fetch((0, _config.getUrl)('/api2/friend'), {\n        method: 'post',\n        body: JSON.stringify(request)\n    }).then(function (response) {\n        console.log(response.status);\n        if (response.status === 200) {\n            _dispatcher2.default.dispatch({\n                type: \"REQUEST_FRIEND\",\n                person: to_id\n            });\n        }\n    }).catch(function (err) {\n        console.log(err);\n    });\n}\n\nfunction getFriends() {\n\n    var profile = _UserStore2.default.getProfile();\n\n    fetch((0, _config.getUrl)('/api2/friends?user_id=' + profile.Id), {\n        method: 'get'\n    }).then(function (response) {\n        console.log(response.status);\n        if (response.status === 200) {\n            return response.json();\n        }\n    }).then(function (json) {\n        console.log(json);\n        _dispatcher2.default.dispatch({\n            type: \"GET_ALL_FRIENDS\",\n            friends: json\n        });\n    }).catch(function (err) {\n        console.log(err);\n    });\n}\n\nfunction openDialog(key) {\n    _dispatcher2.default.dispatch({\n        type: \"OPEN_DIALOG\",\n        key: key\n    });\n}\n\nfunction acceptFriendship(dialogId, friendId) {\n\n    var profile = _UserStore2.default.getProfile();\n    console.log(profile);\n    var request = {\n        dialog_id: dialogId,\n        friend_id: friendId,\n        user_id: profile.Id\n    };\n    console.log(request);\n\n    fetch((0, _config.getUrl)('/api/friend/accept'), {\n\n        // credentials: 'include',\n        method: 'put',\n        body: JSON.stringify(request)\n    }).then(function (response) {\n        console.log(response.status);\n        if (response.status === 200) {\n            _dispatcher2.default.dispatch({\n                type: \"ACCEPT_FRIENDSHIP\",\n                dialog: request\n            });\n        }\n    }).catch(function (err) {\n        console.log(err);\n    });\n}\n\nfunction ignoreFriendship(dialogId, friendId) {\n\n    var profile = _UserStore2.default.getProfile();\n\n    var request = {\n        dialog_id: dialogId,\n        friend_id: friendId,\n        user_id: profile.id\n    };\n    console.log(request);\n\n    fetch((0, _config.getUrl)('/api/friend/ignore'), {\n        method: 'delete',\n        body: JSON.stringify(request)\n    }).then(function (response) {\n        console.log(response.status);\n        if (response.status === 200) {\n            _dispatcher2.default.dispatch({\n                type: \"IGNORE_FRIENDSHIP\",\n                dialog: request\n            });\n        }\n    }).catch(function (err) {\n        console.log(err);\n    });\n}",{"version":3,"sources":["src/services/UserServices.js"],"names":["faceToFaceTest","getUser","getOnlineUsers","getAllUsers","sendRequestToFriends","getFriends","openDialog","acceptFriendship","ignoreFriendship","state","console","log","request","facebook_id","user","id","name","url","avatar","fetch","method","body","JSON","stringify","then","response","status","json","dispatch","type","catch","err","users","from_id","to_id","person","profile","getProfile","Id","friends","key","dialogId","friendId","dialog_id","friend_id","user_id","dialog"],"mappings":"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","file":"UserServices.js","sourceRoot":"/Users/serqeycheremisin/ieltof","sourcesContent":["import dispatcher from \"../dispatcher\";\nimport {getUrl} from \"../config/config\";\nimport UserStore from \"../stores/UserStore\";\n\nexport function faceToFaceTest() {\n\n}\n\nexport function getUser(state) {\n\n    console.log(state);\n    let request = {\n        facebook_id: state.user.id,\n        name: state.user.name,\n        url: state.avatar\n    };\n    console.log(request);\n\n    fetch(getUrl('/api2/user'),\n        {\n            method: 'post',\n            body: JSON.stringify(request)\n        }).then(response => {\n        console.log(response.status)\n        if (response.status === 200) {\n            return response.json()\n        }\n    }).then(json => {\n        console.log(json);\n        dispatcher.dispatch({\n            type: \"GET_USER_EVENT\",\n            user: json\n        });\n    }).catch(err => {\n        console.log(err)\n    })\n}\n\n\nexport function getOnlineUsers() {\n\n    fetch(getUrl('/api2/users/online'),\n        {\n            method: 'get'\n        }).then(response => {\n        console.log(response.status);\n\n        if (response.status === 200) {\n            return response.json()\n        }\n    }).then(json => {\n        console.log(json);\n        dispatcher.dispatch({\n            type: \"GET_ALL_USERS_EVENT\",\n            users: json\n        });\n    }).catch(err => {\n        console.log(err)\n    })\n}\n\n\nexport function getAllUsers() {\n\n    fetch(getUrl('/api2/users'),\n        {\n            method: 'get'\n        }).then(response => {\n        console.log(response.status);\n\n        if (response.status === 200) {\n            return response.json()\n        }\n    }).then(json => {\n        console.log(json);\n        dispatcher.dispatch({\n            type: \"GET_ALL_USERS_EVENT\",\n            users: json\n        });\n    }).catch(err => {\n        console.log(err)\n    })\n}\n\n\nexport function sendRequestToFriends(from_id, to_id) {\n\n\n    let request = {\n        from_id: from_id,\n        to_id: to_id,\n    };\n    console.log(request);\n\n    fetch(getUrl('/api2/friend'),\n        {\n            method: 'post',\n            body: JSON.stringify(request)\n        }).then(response => {\n        console.log(response.status)\n        if (response.status === 200) {\n            dispatcher.dispatch({\n                type: \"REQUEST_FRIEND\",\n                person: to_id\n            });\n        }\n    }).catch(err => {\n        console.log(err)\n    })\n}\n\nexport function getFriends() {\n\n    let profile = UserStore.getProfile();\n\n    fetch(getUrl('/api2/friends?user_id=' + profile.Id),\n        {\n            method: 'get'\n        }).then(response => {\n        console.log(response.status)\n        if (response.status === 200) {\n            return response.json()\n        }\n    }).then(json => {\n        console.log(json);\n        dispatcher.dispatch({\n            type: \"GET_ALL_FRIENDS\",\n            friends: json\n        });\n    }).catch(err => {\n        console.log(err)\n    })\n}\n\n\nexport function openDialog(key) {\n    dispatcher.dispatch({\n        type: \"OPEN_DIALOG\",\n        key: key\n    });\n}\n\nexport function acceptFriendship(dialogId, friendId) {\n\n    let profile = UserStore.getProfile();\n    console.log(profile);\n    let request = {\n        dialog_id: dialogId,\n        friend_id: friendId,\n        user_id: profile.Id\n    };\n    console.log(request);\n\n    fetch(getUrl('/api/friend/accept'),\n        {\n\n            // credentials: 'include',\n            method: 'put',\n            body: JSON.stringify(request)\n        }).then(response => {\n        console.log(response.status)\n        if (response.status === 200) {\n            dispatcher.dispatch({\n                type: \"ACCEPT_FRIENDSHIP\",\n                dialog: request\n            });\n        }\n    }).catch(err => {\n        console.log(err)\n    })\n}\n\nexport function ignoreFriendship(dialogId, friendId) {\n\n    let profile = UserStore.getProfile();\n\n    let request = {\n        dialog_id: dialogId,\n        friend_id: friendId,\n        user_id: profile.id\n    };\n    console.log(request);\n\n    fetch(getUrl('/api/friend/ignore'),\n        {\n            method: 'delete',\n            body: JSON.stringify(request)\n        }).then(response => {\n        console.log(response.status)\n        if (response.status === 200) {\n            dispatcher.dispatch({\n                type: \"IGNORE_FRIENDSHIP\",\n                dialog: request\n            });\n        }\n    }).catch(err => {\n        console.log(err)\n    })\n}\n\n\n\n"]}]}