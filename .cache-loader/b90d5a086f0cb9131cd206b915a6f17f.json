{"remainingRequest":"/Users/serqeycheremisin/ieltof/node_modules/babel-loader/lib/index.js!/Users/serqeycheremisin/ieltof/src/facebook/facebook-with-button.js","dependencies":[{"path":"/Users/serqeycheremisin/ieltof/src/facebook/facebook-with-button.js","mtime":1524005688204},{"path":"/Users/serqeycheremisin/ieltof/.babelrc","mtime":1523141114949},{"path":"/Users/serqeycheremisin/ieltof/node_modules/babel-loader/lib/index.js","mtime":1520329890000},{"path":"/Users/serqeycheremisin/ieltof/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/serqeycheremisin/ieltof/node_modules/babel-loader/lib/index.js","mtime":1520329890000}],"contextDependencies":[],"result":["// // \n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import styles from '../styles/facebook.scss';\n// import FacebookLogin from './facebook';\n//\n// // https://www.w3.org/TR/html5/disabled-elements.html#disabled-elements\n// const _shouldAddDisabledProp = (tag) => [\n//     'button',\n//     'input',\n//     'select',\n//     'textarea',\n//     'optgroup',\n//     'option',\n//     'fieldset',\n// ].indexOf((tag + '').toLowerCase()) >= 0;\n//\n// class ReactFacebookLoginWithButton extends React.Component {\n//     static propTypes = {\n//         textButton: PropTypes.string,\n//         typeButton: PropTypes.string,\n//         size: PropTypes.string,\n//         cssClass: PropTypes.string,\n//         icon: PropTypes.any,\n//         containerStyle: PropTypes.object,\n//         buttonStyle: PropTypes.object,\n//         tag: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n//     };\n//\n//     static defaultProps = {\n//         textButton: 'Login with Facebook',\n//         typeButton: 'button',\n//         size: 'metro',\n//         fields: 'name',\n//         cssClass: 'kep-login-facebook',\n//         tag: 'button',\n//     };\n//\n//     style() {\n//         const defaultCSS = this.constructor.defaultProps.cssClass;\n//         if (this.props.cssClass === defaultCSS) {\n//             return <style dangerouslySetInnerHTML={{ __html: styles }}></style>;\n//         }\n//         return false;\n//     }\n//\n//     containerStyle(renderProps) {\n//         const { isProcessing, isSdkLoaded, isDisabled } = renderProps;\n//\n//         const style = { transition: 'opacity 0.5s' };\n//         if (isProcessing || !isSdkLoaded || isDisabled) {\n//             style.opacity = 0.6;\n//         }\n//         return Object.assign(style, this.props.containerStyle);\n//     }\n//\n//     renderOwnButton(renderProps) {\n//         const { cssClass, size, icon, textButton, typeButton, buttonStyle } = this.props;\n//\n//         const { onClick, isDisabled } = renderProps;\n//\n//         const isIconString = typeof icon === 'string';\n//         const optionalProps = {};\n//         if (isDisabled && _shouldAddDisabledProp(this.props.tag)) {\n//             optionalProps.disabled = true;\n//         }\n//         return (\n//             <span style={ this.containerStyle(renderProps) }>\n//         {isIconString && (\n//             <link\n//                 rel=\"stylesheet\"\n//                 href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\"\n//             />\n//         )}\n//                 <this.props.tag\n//                     type={typeButton}\n//                     className={`${cssClass} ${size}`}\n//                     style={ buttonStyle }\n//                     onClick={onClick}\n//                     {...optionalProps}\n//                 >\n//           {icon && isIconString && (\n//               <i className={`fa ${icon}`}></i>\n//           )}\n//                     {icon && !isIconString && icon}\n//                     {textButton}\n//         </this.props.tag>\n//                 {this.style()}\n//       </span>\n//         );\n//     }\n//\n//     render() {\n//         return (\n//             <FacebookLogin {...this.props} render={renderProps => this.renderOwnButton(renderProps)} />\n//         );\n//     }\n// }\n//\n// export default ReactFacebookLoginWithButton;\n\"use strict\";",{"version":3,"sources":["src/facebook/facebook-with-button.js"],"names":[],"mappingsfile":"facebook-with-button.js","sourceRoot":"/Users/serqeycheremisin/ieltof","sourcesContent":["// // @flow\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import styles from '../styles/facebook.scss';\n// import FacebookLogin from './facebook';\n//\n// // https://www.w3.org/TR/html5/disabled-elements.html#disabled-elements\n// const _shouldAddDisabledProp = (tag) => [\n//     'button',\n//     'input',\n//     'select',\n//     'textarea',\n//     'optgroup',\n//     'option',\n//     'fieldset',\n// ].indexOf((tag + '').toLowerCase()) >= 0;\n//\n// class ReactFacebookLoginWithButton extends React.Component {\n//     static propTypes = {\n//         textButton: PropTypes.string,\n//         typeButton: PropTypes.string,\n//         size: PropTypes.string,\n//         cssClass: PropTypes.string,\n//         icon: PropTypes.any,\n//         containerStyle: PropTypes.object,\n//         buttonStyle: PropTypes.object,\n//         tag: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n//     };\n//\n//     static defaultProps = {\n//         textButton: 'Login with Facebook',\n//         typeButton: 'button',\n//         size: 'metro',\n//         fields: 'name',\n//         cssClass: 'kep-login-facebook',\n//         tag: 'button',\n//     };\n//\n//     style() {\n//         const defaultCSS = this.constructor.defaultProps.cssClass;\n//         if (this.props.cssClass === defaultCSS) {\n//             return <style dangerouslySetInnerHTML={{ __html: styles }}></style>;\n//         }\n//         return false;\n//     }\n//\n//     containerStyle(renderProps) {\n//         const { isProcessing, isSdkLoaded, isDisabled } = renderProps;\n//\n//         const style = { transition: 'opacity 0.5s' };\n//         if (isProcessing || !isSdkLoaded || isDisabled) {\n//             style.opacity = 0.6;\n//         }\n//         return Object.assign(style, this.props.containerStyle);\n//     }\n//\n//     renderOwnButton(renderProps) {\n//         const { cssClass, size, icon, textButton, typeButton, buttonStyle } = this.props;\n//\n//         const { onClick, isDisabled } = renderProps;\n//\n//         const isIconString = typeof icon === 'string';\n//         const optionalProps = {};\n//         if (isDisabled && _shouldAddDisabledProp(this.props.tag)) {\n//             optionalProps.disabled = true;\n//         }\n//         return (\n//             <span style={ this.containerStyle(renderProps) }>\n//         {isIconString && (\n//             <link\n//                 rel=\"stylesheet\"\n//                 href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\"\n//             />\n//         )}\n//                 <this.props.tag\n//                     type={typeButton}\n//                     className={`${cssClass} ${size}`}\n//                     style={ buttonStyle }\n//                     onClick={onClick}\n//                     {...optionalProps}\n//                 >\n//           {icon && isIconString && (\n//               <i className={`fa ${icon}`}></i>\n//           )}\n//                     {icon && !isIconString && icon}\n//                     {textButton}\n//         </this.props.tag>\n//                 {this.style()}\n//       </span>\n//         );\n//     }\n//\n//     render() {\n//         return (\n//             <FacebookLogin {...this.props} render={renderProps => this.renderOwnButton(renderProps)} />\n//         );\n//     }\n// }\n//\n// export default ReactFacebookLoginWithButton;\n"]}]}