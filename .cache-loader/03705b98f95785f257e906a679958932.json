{"remainingRequest":"/Users/serqeycheremisin/ieltof/node_modules/babel-loader/lib/index.js!/Users/serqeycheremisin/ieltof/src/components/TestPage/index.js","dependencies":[{"path":"/Users/serqeycheremisin/ieltof/src/components/TestPage/index.js","mtime":1523261721691},{"path":"/Users/serqeycheremisin/ieltof/.babelrc","mtime":1523141114949},{"path":"/Users/serqeycheremisin/ieltof/node_modules/babel-loader/lib/index.js","mtime":1520329890000},{"path":"/Users/serqeycheremisin/ieltof/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/serqeycheremisin/ieltof/node_modules/babel-loader/lib/index.js","mtime":1520329890000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _peerjs = require(\"peerjs\");\n\nvar _peerjs2 = _interopRequireDefault(_peerjs);\n\nvar _Chat = require(\"components/Chat\");\n\nvar _Chat2 = _interopRequireDefault(_Chat);\n\nvar _QuestionBlock = require(\"components/QuestionBlock\");\n\nvar _QuestionBlock2 = _interopRequireDefault(_QuestionBlock);\n\nvar _TestServices = require(\"../../services/TestServices\");\n\nvar TestServices = _interopRequireWildcard(_TestServices);\n\nvar _TestPage = require(\"./TestPage.css\");\n\nvar _TestPage2 = _interopRequireDefault(_TestPage);\n\nvar _classnames = require(\"classnames\");\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _reactPreloaderIcon = require(\"react-preloader-icon\");\n\nvar _reactPreloaderIcon2 = _interopRequireDefault(_reactPreloaderIcon);\n\nvar _Oval = require(\"react-preloader-icon/loaders/Oval\");\n\nvar _Oval2 = _interopRequireDefault(_Oval);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TestPage = function (_React$Component) {\n    _inherits(TestPage, _React$Component);\n\n    function TestPage(props) {\n        _classCallCheck(this, TestPage);\n\n        var _this = _possibleConstructorReturn(this, (TestPage.__proto__ || Object.getPrototypeOf(TestPage)).call(this, props));\n\n        _this.state = {\n            peer_id: null,\n            username: null,\n            conn: null,\n            call: null,\n            peer: new _peerjs2.default({\n                host: \"cheremisin.info\",\n                port: 9000,\n                path: '/peerjs',\n                secure: true,\n                config: {\n                    'iceServers': [{ url: 'stun:stun1.l.google.com:19302' }, {\n                        url: 'turn:numb.viagenie.ca',\n                        credential: 'muazkh',\n                        username: 'webrtc@live.com'\n                    }]\n                }\n            }),\n            test: null\n        };\n\n        _this.socket = new WebSocket(\"wss://cheremisin.info/api/v1/client\");\n\n        _this.innerStyles = {\n            bStart: {\n                display: 'block'\n            },\n            bNext: {\n                display: 'none'\n            },\n            preloader: {\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                overflow: 'visible',\n\n                display: 'none'\n            }\n        };\n\n        _this.requestLocalVideo = _this.requestLocalVideo.bind(_this);\n        _this.onReceiveStream = _this.onReceiveStream.bind(_this);\n        _this.handleMessage = _this.handleMessage.bind(_this);\n        return _this;\n    }\n\n    _createClass(TestPage, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n            var _this2 = this;\n\n            this.state.peer.on('open', function () {\n                console.log(\"peer open\");\n                _this2.state.peer_id = _this2.state.peer.id;\n            });\n\n            this.state.peer.on('connection', function (connection) {\n                console.log('peer.on connection');\n\n                _this2.state.conn = connection;\n                _this2.state.peer_id = connection.peer;\n                _this2.state.conn.on('data', _this2.handleMessage);\n\n                var call = _this2.state.peer.call(_this2.state.peer_id, window.localStream);\n                call.on('stream', function (stream) {\n                    window.peer_stream = stream;\n                    var video = document.getElementById('peer-camera');\n                    video.src = window.URL.createObjectURL(stream);\n                    window.peer_stream = stream;\n                    // this.onReceiveStream(stream, 'peer-camera');\n                });\n            });\n\n            this.state.peer.on('error', function (err) {\n                console.error(err);\n            });\n\n            this.state.peer.on('call', function (call) {\n                console.log('peer.on receive call');\n\n                // let acceptsCall = confirm(\"Videocall incoming, do you want to accept it ?\");\n\n                if (true) {\n                    call.answer(window.localStream);\n                    call.on('stream', function (stream) {\n                        window.peer_stream = stream;\n                        // this.onReceiveStream(stream, 'peer-camera');\n\n                        var video = document.getElementById('peer-camera');\n                        video.src = window.URL.createObjectURL(stream);\n                        window.peer_stream = stream;\n                    });\n\n                    call.on('close', function () {\n                        // alert(\"The videocall has finished\");\n                    });\n                } else {\n                    console.log(\"Call denied !\");\n                }\n            });\n\n            this.requestLocalVideo({\n                success: function success(stream) {\n                    console.log(\"requestLocalVideo success\");\n                    window.localStream = stream;\n\n                    var video = document.getElementById('my-camera');\n                    // video.src = window.HTMLMediaElement.srcObject(stream);\n                    video.src = window.URL.createObjectURL(stream);\n                    window.peer_stream = stream;\n                    // this.onReceiveStream(stream, 'my-camera');\n\n                    var message = {\n                        Type: \"token\",\n                        Action: \"token\",\n                        Body: {\n                            token: _this2.state.peer_id\n                        }\n                    };\n                    _this2.socket.send(JSON.stringify(message));\n                },\n                error: function error(err) {\n                    console.log(\"requestLocalVideo error\");\n                    alert(\"Cannot get access to your camera and video !\");\n                    console.error(err);\n                }\n            });\n\n            this.socket.onopen = function (event) {\n                console.log(\"Соединение установлено.\");\n            };\n\n            this.socket.onclose = function (event) {\n                if (event.wasClean) {\n                    // alert('Соединение закрыто чисто');\n                } else {}\n                    // alert('Обрыв соединения'); // например, \"убит\" процесс сервера\n\n                    // alert('Код: ' + event.code + ' причина: ' + event.reason);\n            };\n\n            this.socket.onerror = function (error) {\n                // alert(\"Ошибка \" + error.message);\n            };\n\n            this.socket.onmessage = function (event) {\n\n                var obj = JSON.parse(event.data);\n                console.log(\"event\" + event.data);\n\n                switch (obj.action) {\n                    case 'init':\n                        console.log(\"init\" + event.data);\n                        if (obj.status) {\n\n                            _this2.state.conn = _this2.state.peer.connect(obj.status, {\n                                metadata: {\n                                    'username': \"username\"\n                                }\n                            });\n\n                            _this2.state.conn.on('data', _this2.handleMessage);\n\n                            _this2.innerStyles.preloader = {\n                                position: 'absolute',\n                                top: '50%',\n                                left: '50%',\n                                transform: 'translate(-50%, -50%)',\n\n                                display: 'none'\n                            };\n\n                            _this2.setState({});\n\n                            var _message = {\n                                Type: \"GET_TEST\",\n                                Action: \"GET_TEST\",\n                                Body: {\n                                    token: \"\"\n                                }\n                            };\n\n                            _this2.socket.send(JSON.stringify(_message));\n                        } else {\n                            console.error(\"error \" + event.data);\n                            console.log(\"You need to provide a peer to connect with !\");\n                            return false;\n                        }\n                        break;\n\n                    case 'init2':\n\n                        _this2.innerStyles.preloader = {\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            transform: 'translate(-50%, -50%)',\n                            overflow: 'visible',\n\n                            display: 'none'\n                        };\n                        _this2.setState({});\n\n                        var message = {\n                            Type: \"GET_TEST\",\n                            Action: \"GET_TEST\",\n                            Body: {\n                                token: \"\"\n                            }\n                        };\n                        _this2.socket.send(JSON.stringify(message));\n\n                        break;\n\n                    case 'STOP_VIDEO_CHAT':\n\n                        break;\n\n                    case 'DISCONNECTED_PAIR':\n                        var video = document.getElementById('peer-camera');\n                        video.src = null;\n                        window.peer_stream = null;\n                        _this2.setState({});\n                        break;\n\n                    case 'sendMessage':\n                        console.log(\"sendMessage\");\n                        TestServices.onChatMessage(obj.status);\n                        break;\n\n                    case 'GET_TEST':\n                        console.log('GET_TEST');\n                        console.log(obj.body);\n                        TestServices.onTestQuestions(obj.body);\n                        break;\n                }\n            };\n        }\n    }, {\n        key: \"requestLocalVideo\",\n        value: function requestLocalVideo(callbacks) {\n            // Monkeypatch for crossbrowser geusermedia\n            navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n\n            // Request audio an video\n            navigator.getUserMedia({ audio: true, video: true }, callbacks.success, callbacks.error);\n        }\n    }, {\n        key: \"handleMessage\",\n        value: function handleMessage(data) {\n            var orientation = \"text-left\";\n\n            // If the message is yours, set text to right !\n            if (data.from == username) {\n                orientation = \"text-right\";\n            }\n\n            var messageHTML = '<a href=\"javascript:void(0);\" class=\"list-group-item' + orientation + '\">';\n            messageHTML += '<h4 class=\"list-group-item-heading\">' + data.from + '</h4>';\n            messageHTML += '<p class=\"list-group-item-text\">' + data.text + '</p>';\n            messageHTML += '</a>';\n\n            document.getElementById(\"messages\").innerHTML += messageHTML;\n\n            this.state({});\n        }\n    }, {\n        key: \"onReceiveStream\",\n        value: function onReceiveStream(stream, element_id) {\n\n            var video = document.getElementById(element_id);\n            video.src = window.URL.createObjectURL(stream);\n            window.peer_stream = stream;\n        }\n    }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n            this.state.peer.disconnect();\n        }\n    }, {\n        key: \"render\",\n        value: function render() {\n            return _react2.default.createElement(\n                \"div\",\n                { id: \"app\", className: \"container-fluid app\" },\n                _react2.default.createElement(\n                    \"div\",\n                    { className: \"row test-container\" },\n                    _react2.default.createElement(\n                        \"div\",\n                        { className: \"col-sm-6 video-chat section section-1\" },\n                        _react2.default.createElement(\n                            \"div\",\n                            { className: \"video-1\" },\n                            _react2.default.createElement(\n                                \"div\",\n                                { className: \"video-1-peer\" },\n                                _react2.default.createElement(\n                                    \"div\",\n                                    { className: \"text-center video-1-1 video-1-1-peer\" },\n                                    _react2.default.createElement(\"video\", { id: \"peer-camera\", className: \"peer-camera center-block\",\n                                        autoplay: \"autoplay\" }),\n                                    _react2.default.createElement(\"span\", { className: \"label label-info\", id: \"connected_peer\" })\n                                ),\n                                _react2.default.createElement(\n                                    \"div\",\n                                    { className: \"text-center video-1-1 video-1-1-my\" },\n                                    _react2.default.createElement(\"video\", { id: \"my-camera\", className: \"my-camera center-block\", autoplay: \"autoplay\",\n                                        muted: \"true\" })\n                                )\n                            ),\n                            _react2.default.createElement(\n                                \"div\",\n                                { style: this.innerStyles.preloader },\n                                _react2.default.createElement(_reactPreloaderIcon2.default, {\n                                    loader: _Oval2.default,\n                                    size: 80,\n                                    strokeWidth: 8 // min: 1, max: 50\n                                    , strokeColor: \"#F0AD4E\",\n                                    duration: 800\n                                })\n                            )\n                        ),\n                        _react2.default.createElement(\n                            \"div\",\n                            null,\n                            _react2.default.createElement(\n                                \"div\",\n                                { className: (0, _classnames2.default)(_defineProperty({ \"container\": true }, _TestPage2.default.connection_manager, true)) },\n                                _react2.default.createElement(\n                                    \"div\",\n                                    { className: (0, _classnames2.default)(_defineProperty({ \"row\": true }, _TestPage2.default.row_container, true)) },\n                                    _react2.default.createElement(\n                                        \"div\",\n                                        { className: \"col-sm-6\" },\n                                        _react2.default.createElement(\n                                            \"button\",\n                                            { style: this.innerStyles.bStart, onClick: this.startVideoChat.bind(this),\n                                                type: \"button\",\n                                                className: (0, _classnames2.default)(_defineProperty({\n                                                    \"btn btn-primary\": true\n                                                }, _TestPage2.default.button_start, true)) },\n                                            _react2.default.createElement(\n                                                \"span\",\n                                                { className: \"tr\", \"data-tr-id\": \"1232\", \"data-tr\": \"start\" },\n                                                \"start\"\n                                            )\n                                        ),\n                                        _react2.default.createElement(\n                                            \"button\",\n                                            { style: this.innerStyles.bNext, onClick: this.findNextPartner.bind(this),\n                                                type: \"button\",\n                                                className: (0, _classnames2.default)(_defineProperty({\n                                                    \"btn btn-primary\": true\n                                                }, _TestPage2.default.button_start, true)) },\n                                            _react2.default.createElement(\n                                                \"span\",\n                                                { className: \"tr\", \"data-tr-id\": \"1232\", \"data-tr\": \"start\" },\n                                                \"next\"\n                                            )\n                                        )\n                                    ),\n                                    _react2.default.createElement(\n                                        \"div\",\n                                        { className: \"col-sm-6\" },\n                                        _react2.default.createElement(\n                                            \"button\",\n                                            { type: \"button\", onClick: this.stopVideoChat.bind(this),\n                                                className: (0, _classnames2.default)(_defineProperty({\n                                                    \"btn btn-primary\": true\n                                                }, _TestPage2.default.button_stop, true)) },\n                                            _react2.default.createElement(\n                                                \"span\",\n                                                { className: \"tr\", \"data-tr-id\": \"1232\", \"data-tr\": \"start\" },\n                                                \"stop\"\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        )\n                    ),\n                    _react2.default.createElement(\n                        \"div\",\n                        { className: \"col-sm-6 section section-2\" },\n                        _react2.default.createElement(_QuestionBlock2.default, { test: this.state.test })\n                    ),\n                    _react2.default.createElement(_Chat2.default, _extends({ className: _TestPage2.default.chat }, this.props, { socket: this.socket }))\n                ),\n                _react2.default.createElement(\n                    \"div\",\n                    { \"class\": \"modal fade\", id: \"exampleModalLong\", tabindex: \"-1\", role: \"dialog\", \"aria-labelledby\": \"exampleModalLongTitle\", \"aria-hidden\": \"true\" },\n                    _react2.default.createElement(\n                        \"div\",\n                        { \"class\": \"modal-dialog\", role: \"document\" },\n                        _react2.default.createElement(\n                            \"div\",\n                            { \"class\": \"modal-content\" },\n                            _react2.default.createElement(\n                                \"div\",\n                                { \"class\": \"modal-header\" },\n                                _react2.default.createElement(\n                                    \"h5\",\n                                    { \"class\": \"modal-title\", id: \"exampleModalLongTitle\" },\n                                    \"Modal title\"\n                                ),\n                                _react2.default.createElement(\n                                    \"button\",\n                                    { type: \"button\", \"class\": \"close\", \"data-dismiss\": \"modal\", \"aria-label\": \"Close\" },\n                                    _react2.default.createElement(\n                                        \"span\",\n                                        { \"aria-hidden\": \"true\" },\n                                        \"\\xD7\"\n                                    )\n                                )\n                            ),\n                            _react2.default.createElement(\n                                \"div\",\n                                { \"class\": \"modal-body\" },\n                                \"...\"\n                            ),\n                            _react2.default.createElement(\n                                \"div\",\n                                { \"class\": \"modal-footer\" },\n                                _react2.default.createElement(\n                                    \"button\",\n                                    { type: \"button\", \"class\": \"btn btn-secondary\", \"data-dismiss\": \"modal\" },\n                                    \"Close\"\n                                ),\n                                _react2.default.createElement(\n                                    \"button\",\n                                    { type: \"button\", \"class\": \"btn btn-primary\" },\n                                    \"Save changes\"\n                                )\n                            )\n                        )\n                    )\n                )\n            );\n        }\n    }, {\n        key: \"startVideoChat\",\n        value: function startVideoChat() {\n\n            this.innerStyles = {\n                bStart: {\n                    display: 'none'\n                },\n                bNext: {\n                    display: 'block'\n                }\n            };\n\n            this.innerStyles.preloader = {\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                overflow: 'visible',\n\n                display: 'block'\n            };\n\n            this.setState({});\n\n            var message = {\n                Type: \"INIT_VIDEO_CHAT\",\n                Action: \"INIT_VIDEO_CHAT\",\n                Body: {}\n            };\n\n            console.log(\"INIT_VIDEO_CHAT\");\n            this.socket.send(JSON.stringify(message));\n        }\n    }, {\n        key: \"findNextPartner\",\n        value: function findNextPartner() {\n\n            this.innerStyles.preloader = {\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                overflow: 'visible',\n\n                display: 'block'\n            };\n\n            var video = document.getElementById('peer-camera');\n            video.src = null;\n            window.peer_stream = null;\n\n            this.setState({});\n\n            var message = {\n                Type: \"GET_NEXT_PARTNER\",\n                Action: \"GET_NEXT_PARTNER\",\n                Body: {}\n            };\n\n            console.log(\"GET_NEXT_PARTNER\");\n            this.socket.send(JSON.stringify(message));\n        }\n    }, {\n        key: \"stopVideoChat\",\n        value: function stopVideoChat() {\n            console.log(\"STOP_VIDEO_CHAT\");\n\n            this.innerStyles = {\n                bStart: {\n                    display: 'block'\n                },\n                bNext: {\n                    display: 'none'\n                }\n            };\n\n            this.innerStyles.preloader = {\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                overflow: 'visible',\n\n                display: 'none'\n            };\n\n            var message = {\n                Type: \"STOP_VIDEO_CHAT\",\n                Action: \"STOP_VIDEO_CHAT\",\n                Body: {}\n            };\n\n            this.socket.send(JSON.stringify(message));\n\n            var video = document.getElementById('peer-camera');\n            video.src = null;\n            window.peer_stream = null;\n            this.setState({});\n        }\n    }]);\n\n    return TestPage;\n}(_react2.default.Component);\n\nexports.default = TestPage;",{"version":3,"sources":["src/components/TestPage/index.js"],"names":["TestServices","TestPage","props","state","peer_id","username","conn","call","peer","host","port","path","secure","config","url","credential","test","socket","WebSocket","innerStyles","bStart","display","bNext","preloader","position","top","left","transform","overflow","requestLocalVideo","bind","onReceiveStream","handleMessage","on","console","log","id","connection","window","localStream","stream","peer_stream","video","document","getElementById","src","URL","createObjectURL","err","error","answer","success","message","Type","Action","Body","token","send","JSON","stringify","alert","onopen","event","onclose","wasClean","onerror","onmessage","obj","parse","data","action","status","connect","metadata","setState","onChatMessage","body","onTestQuestions","callbacks","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","audio","orientation","from","messageHTML","text","innerHTML","element_id","disconnect","connection_manager","row_container","startVideoChat","button_start","findNextPartner","stopVideoChat","button_stop","chat","Component"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;IAAYA,Y;;AACZ;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;IAEqBC,Q;;;AAEjB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,wHACTA,KADS;;AAGf,cAAKC,KAAL,GAAa;AACTC,qBAAS,IADA;AAETC,sBAAU,IAFD;AAGTC,kBAAM,IAHG;AAITC,kBAAM,IAJG;AAKTC,kBAAM,qBAAS;AACXC,sBAAM,iBADK;AAEXC,sBAAM,IAFK;AAGXC,sBAAM,SAHK;AAIXC,wBAAQ,IAJG;AAKXC,wBAAQ;AACJ,kCAAc,CACV,EAACC,KAAK,+BAAN,EADU,EAEV;AACIA,6BAAK,uBADT;AAEIC,oCAAY,QAFhB;AAGIV,kCAAU;AAHd,qBAFU;AADV;AALG,aAAT,CALG;AAqBTW,kBAAM;AArBG,SAAb;;AAwBA,cAAKC,MAAL,GAAc,IAAIC,SAAJ,CAAc,qCAAd,CAAd;;AAGA,cAAKC,WAAL,GAAmB;AACfC,oBAAQ;AACJC,yBAAS;AADL,aADO;AAIfC,mBAAO;AACHD,yBAAS;AADN,aAJQ;AAOfE,uBAAW;AACPC,0BAAU,UADH;AAEPC,qBAAK,KAFE;AAGPC,sBAAM,KAHC;AAIPC,2BAAW,uBAJJ;AAKPC,0BAAU,SALH;;AAOPP,yBAAS;AAPF;AAPI,SAAnB;;AAkBA,cAAKQ,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,OAAzB;AACA,cAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBD,IAArB,OAAvB;AACA,cAAKE,aAAL,GAAqB,MAAKA,aAAL,CAAmBF,IAAnB,OAArB;AAlDe;AAmDlB;;;;4CAGmB;AAAA;;AAEhB,iBAAK3B,KAAL,CAAWK,IAAX,CAAgByB,EAAhB,CAAmB,MAAnB,EAA2B,YAAM;AAC7BC,wBAAQC,GAAR,CAAY,WAAZ;AACA,uBAAKhC,KAAL,CAAWC,OAAX,GAAqB,OAAKD,KAAL,CAAWK,IAAX,CAAgB4B,EAArC;AACH,aAHD;;AAKA,iBAAKjC,KAAL,CAAWK,IAAX,CAAgByB,EAAhB,CAAmB,YAAnB,EAAiC,UAACI,UAAD,EAAgB;AAC7CH,wBAAQC,GAAR,CAAY,oBAAZ;;AAEA,uBAAKhC,KAAL,CAAWG,IAAX,GAAkB+B,UAAlB;AACA,uBAAKlC,KAAL,CAAWC,OAAX,GAAqBiC,WAAW7B,IAAhC;AACA,uBAAKL,KAAL,CAAWG,IAAX,CAAgB2B,EAAhB,CAAmB,MAAnB,EAA2B,OAAKD,aAAhC;;AAEA,oBAAIzB,OAAO,OAAKJ,KAAL,CAAWK,IAAX,CAAgBD,IAAhB,CAAqB,OAAKJ,KAAL,CAAWC,OAAhC,EAAyCkC,OAAOC,WAAhD,CAAX;AACAhC,qBAAK0B,EAAL,CAAQ,QAAR,EAAkB,UAACO,MAAD,EAAY;AAC1BF,2BAAOG,WAAP,GAAqBD,MAArB;AACA,wBAAIE,QAAQC,SAASC,cAAT,CAAwB,aAAxB,CAAZ;AACAF,0BAAMG,GAAN,GAAYP,OAAOQ,GAAP,CAAWC,eAAX,CAA2BP,MAA3B,CAAZ;AACAF,2BAAOG,WAAP,GAAqBD,MAArB;AACA;AACH,iBAND;AAQH,aAhBD;;AAkBA,iBAAKrC,KAAL,CAAWK,IAAX,CAAgByB,EAAhB,CAAmB,OAAnB,EAA4B,UAAUe,GAAV,EAAe;AACvCd,wBAAQe,KAAR,CAAcD,GAAd;AACH,aAFD;;AAIA,iBAAK7C,KAAL,CAAWK,IAAX,CAAgByB,EAAhB,CAAmB,MAAnB,EAA2B,UAAC1B,IAAD,EAAU;AACjC2B,wBAAQC,GAAR,CAAY,sBAAZ;;AAEA;;AAEA,oBAAI,IAAJ,EAAU;AACN5B,yBAAK2C,MAAL,CAAYZ,OAAOC,WAAnB;AACAhC,yBAAK0B,EAAL,CAAQ,QAAR,EAAkB,UAACO,MAAD,EAAY;AAC1BF,+BAAOG,WAAP,GAAqBD,MAArB;AACA;;AAEA,4BAAIE,QAAQC,SAASC,cAAT,CAAwB,aAAxB,CAAZ;AACAF,8BAAMG,GAAN,GAAYP,OAAOQ,GAAP,CAAWC,eAAX,CAA2BP,MAA3B,CAAZ;AACAF,+BAAOG,WAAP,GAAqBD,MAArB;AACH,qBAPD;;AASAjC,yBAAK0B,EAAL,CAAQ,OAAR,EAAiB,YAAM;AACnB;AACH,qBAFD;AAIH,iBAfD,MAeO;AACHC,4BAAQC,GAAR,CAAY,eAAZ;AACH;AACJ,aAvBD;;AAyBA,iBAAKN,iBAAL,CAAuB;AACnBsB,yBAAS,iBAACX,MAAD,EAAY;AACjBN,4BAAQC,GAAR,CAAY,2BAAZ;AACAG,2BAAOC,WAAP,GAAqBC,MAArB;;AAEA,wBAAIE,QAAQC,SAASC,cAAT,CAAwB,WAAxB,CAAZ;AACA;AACAF,0BAAMG,GAAN,GAAYP,OAAOQ,GAAP,CAAWC,eAAX,CAA2BP,MAA3B,CAAZ;AACAF,2BAAOG,WAAP,GAAqBD,MAArB;AACA;;AAEA,wBAAIY,UAAU;AACVC,8BAAM,OADI;AAEVC,gCAAQ,OAFE;AAGVC,8BAAM;AACFC,mCAAO,OAAKrD,KAAL,CAAWC;AADhB;AAHI,qBAAd;AAOA,2BAAKa,MAAL,CAAYwC,IAAZ,CAAiBC,KAAKC,SAAL,CAAeP,OAAf,CAAjB;AACH,iBAnBkB;AAoBnBH,uBAAO,eAACD,GAAD,EAAS;AACZd,4BAAQC,GAAR,CAAY,yBAAZ;AACAyB,0BAAM,8CAAN;AACA1B,4BAAQe,KAAR,CAAcD,GAAd;AACH;AAxBkB,aAAvB;;AA2BA,iBAAK/B,MAAL,CAAY4C,MAAZ,GAAqB,UAACC,KAAD,EAAW;AAC5B5B,wBAAQC,GAAR,CAAY,yBAAZ;AACH,aAFD;;AAIA,iBAAKlB,MAAL,CAAY8C,OAAZ,GAAsB,UAACD,KAAD,EAAW;AAC7B,oBAAIA,MAAME,QAAV,EAAoB;AAChB;AACH,iBAFD,MAEO,CAEN;AADG;;AAEJ;AACH,aAPD;;AASA,iBAAK/C,MAAL,CAAYgD,OAAZ,GAAsB,UAAChB,KAAD,EAAW;AAC7B;AACH,aAFD;;AAIA,iBAAKhC,MAAL,CAAYiD,SAAZ,GAAwB,UAACJ,KAAD,EAAW;;AAE/B,oBAAIK,MAAMT,KAAKU,KAAL,CAAWN,MAAMO,IAAjB,CAAV;AACAnC,wBAAQC,GAAR,CAAY,UAAU2B,MAAMO,IAA5B;;AAEA,wBAAQF,IAAIG,MAAZ;AACI,yBAAK,MAAL;AACIpC,gCAAQC,GAAR,CAAY,SAAS2B,MAAMO,IAA3B;AACA,4BAAIF,IAAII,MAAR,EAAgB;;AAEZ,mCAAKpE,KAAL,CAAWG,IAAX,GAAkB,OAAKH,KAAL,CAAWK,IAAX,CAAgBgE,OAAhB,CAAwBL,IAAII,MAA5B,EAAoC;AAClDE,0CAAU;AACN,gDAAY;AADN;AADwC,6BAApC,CAAlB;;AAMA,mCAAKtE,KAAL,CAAWG,IAAX,CAAgB2B,EAAhB,CAAmB,MAAnB,EAA2B,OAAKD,aAAhC;;AAEA,mCAAKb,WAAL,CAAiBI,SAAjB,GAA6B;AACzBC,0CAAU,UADe;AAEzBC,qCAAK,KAFoB;AAGzBC,sCAAM,KAHmB;AAIzBC,2CAAW,uBAJc;;AAMzBN,yCAAS;AANgB,6BAA7B;;AASA,mCAAKqD,QAAL,CAAc,EAAd;;AAEA,gCAAItB,WAAU;AACVC,sCAAM,UADI;AAEVC,wCAAQ,UAFE;AAGVC,sCAAM;AACFC,2CAAO;AADL;AAHI,6BAAd;;AAQA,mCAAKvC,MAAL,CAAYwC,IAAZ,CAAiBC,KAAKC,SAAL,CAAeP,QAAf,CAAjB;AAEH,yBA/BD,MA+BO;AACHlB,oCAAQe,KAAR,CAAc,WAAWa,MAAMO,IAA/B;AACAnC,oCAAQC,GAAR,CAAY,8CAAZ;AACA,mCAAO,KAAP;AACH;AACD;;AAEJ,yBAAK,OAAL;;AAEI,+BAAKhB,WAAL,CAAiBI,SAAjB,GAA6B;AACzBC,sCAAU,UADe;AAEzBC,iCAAK,KAFoB;AAGzBC,kCAAM,KAHmB;AAIzBC,uCAAW,uBAJc;AAKzBC,sCAAU,SALe;;AAOzBP,qCAAS;AAPgB,yBAA7B;AASA,+BAAKqD,QAAL,CAAc,EAAd;;AAEA,4BAAItB,UAAU;AACVC,kCAAM,UADI;AAEVC,oCAAQ,UAFE;AAGVC,kCAAM;AACFC,uCAAO;AADL;AAHI,yBAAd;AAOA,+BAAKvC,MAAL,CAAYwC,IAAZ,CAAiBC,KAAKC,SAAL,CAAeP,OAAf,CAAjB;;AAEA;;AAEJ,yBAAK,iBAAL;;AAEI;;AAEJ,yBAAK,mBAAL;AACI,4BAAIV,QAAQC,SAASC,cAAT,CAAwB,aAAxB,CAAZ;AACAF,8BAAMG,GAAN,GAAY,IAAZ;AACAP,+BAAOG,WAAP,GAAqB,IAArB;AACA,+BAAKiC,QAAL,CAAc,EAAd;AACA;;AAEJ,yBAAK,aAAL;AACIxC,gCAAQC,GAAR,CAAY,aAAZ;AACAnC,qCAAa2E,aAAb,CAA2BR,IAAII,MAA/B;AACA;;AAEJ,yBAAK,UAAL;AACIrC,gCAAQC,GAAR,CAAY,UAAZ;AACAD,gCAAQC,GAAR,CAAYgC,IAAIS,IAAhB;AACA5E,qCAAa6E,eAAb,CAA6BV,IAAIS,IAAjC;AACA;AArFR;AAuFH,aA5FD;AA6FH;;;0CAEiBE,S,EAAW;AACzB;AACAC,sBAAUC,YAAV,GAAyBD,UAAUC,YAAV,IAA0BD,UAAUE,kBAApC,IAA0DF,UAAUG,eAA7F;;AAEA;AACAH,sBAAUC,YAAV,CAAuB,EAACG,OAAO,IAAR,EAAczC,OAAO,IAArB,EAAvB,EAAmDoC,UAAU3B,OAA7D,EAAsE2B,UAAU7B,KAAhF;AACH;;;sCAEaoB,I,EAAM;AAChB,gBAAIe,cAAc,WAAlB;;AAEA;AACA,gBAAIf,KAAKgB,IAAL,IAAahF,QAAjB,EAA2B;AACvB+E,8BAAc,YAAd;AACH;;AAED,gBAAIE,cAAc,yDAAyDF,WAAzD,GAAuE,IAAzF;AACAE,2BAAe,yCAAyCjB,KAAKgB,IAA9C,GAAqD,OAApE;AACAC,2BAAe,qCAAqCjB,KAAKkB,IAA1C,GAAiD,MAAhE;AACAD,2BAAe,MAAf;;AAEA3C,qBAASC,cAAT,CAAwB,UAAxB,EAAoC4C,SAApC,IAAiDF,WAAjD;;AAEA,iBAAKnF,KAAL,CAAW,EAAX;AACH;;;wCAEeqC,M,EAAQiD,U,EAAY;;AAEhC,gBAAI/C,QAAQC,SAASC,cAAT,CAAwB6C,UAAxB,CAAZ;AACA/C,kBAAMG,GAAN,GAAYP,OAAOQ,GAAP,CAAWC,eAAX,CAA2BP,MAA3B,CAAZ;AACAF,mBAAOG,WAAP,GAAqBD,MAArB;AACH;;;+CAEsB;AACnB,iBAAKrC,KAAL,CAAWK,IAAX,CAAgBkF,UAAhB;AACH;;;iCAEQ;AACL,mBACI;AAAA;AAAA,kBAAK,IAAG,KAAR,EAAc,WAAU,qBAAxB;AACI;AAAA;AAAA,sBAAK,WAAU,oBAAf;AACI;AAAA;AAAA,0BAAK,WAAU,uCAAf;AACI;AAAA;AAAA,8BAAK,WAAU,SAAf;AACI;AAAA;AAAA,kCAAK,WAAU,cAAf;AACI;AAAA;AAAA,sCAAK,WAAU,sCAAf;AACI,6EAAO,IAAG,aAAV,EAAwB,WAAU,0BAAlC;AACO,kDAAS,UADhB,GADJ;AAGI,4EAAM,WAAU,kBAAhB,EAAmC,IAAG,gBAAtC;AAHJ,iCADJ;AAMI;AAAA;AAAA,sCAAK,WAAU,oCAAf;AACI,6EAAO,IAAG,WAAV,EAAsB,WAAU,wBAAhC,EAAyD,UAAS,UAAlE;AACO,+CAAM,MADb;AADJ;AANJ,6BADJ;AAYI;AAAA;AAAA,kCAAK,OAAO,KAAKvE,WAAL,CAAiBI,SAA7B;AACI;AACI,0DADJ;AAEI,0CAAM,EAFV;AAGI,iDAAa,CAHjB,CAGoB;AAHpB,sCAII,aAAY,SAJhB;AAKI,8CAAU;AALd;AADJ;AAZJ,yBADJ;AAuBI;AAAA;AAAA;AACI;AAAA;AAAA,kCAAK,WAAW,4CAAY,aAAa,IAAzB,IAAgC,mBAAOoE,kBAAvC,EAA4D,IAA5D,EAAhB;AACI;AAAA;AAAA,sCAAK,WAAW,4CAAY,OAAO,IAAnB,IAA0B,mBAAOC,aAAjC,EAAiD,IAAjD,EAAhB;AACI;AAAA;AAAA,0CAAK,WAAU,UAAf;AACI;AAAA;AAAA,8CAAQ,OAAO,KAAKzE,WAAL,CAAiBC,MAAhC,EAAwC,SAAS,KAAKyE,cAAL,CAAoB/D,IAApB,CAAyB,IAAzB,CAAjD;AACQ,sDAAK,QADb;AAEQ,2DAAW;AACP,uEAAmB;AADZ,mDAEN,mBAAOgE,YAFD,EAEgB,IAFhB,EAFnB;AAMI;AAAA;AAAA,kDAAM,WAAU,IAAhB,EAAqB,cAAW,MAAhC,EAAuC,WAAQ,OAA/C;AAAA;AAAA;AANJ,yCADJ;AASI;AAAA;AAAA,8CAAQ,OAAO,KAAK3E,WAAL,CAAiBG,KAAhC,EAAuC,SAAS,KAAKyE,eAAL,CAAqBjE,IAArB,CAA0B,IAA1B,CAAhD;AACQ,sDAAK,QADb;AAEQ,2DAAW;AACP,uEAAmB;AADZ,mDAEN,mBAAOgE,YAFD,EAEgB,IAFhB,EAFnB;AAMI;AAAA;AAAA,kDAAM,WAAU,IAAhB,EAAqB,cAAW,MAAhC,EAAuC,WAAQ,OAA/C;AAAA;AAAA;AANJ;AATJ,qCADJ;AAmBI;AAAA;AAAA,0CAAK,WAAU,UAAf;AACI;AAAA;AAAA,8CAAQ,MAAK,QAAb,EAAsB,SAAS,KAAKE,aAAL,CAAmBlE,IAAnB,CAAwB,IAAxB,CAA/B;AACQ,2DAAW;AACP,uEAAmB;AADZ,mDAEN,mBAAOmE,WAFD,EAEe,IAFf,EADnB;AAKI;AAAA;AAAA,kDAAM,WAAU,IAAhB,EAAqB,cAAW,MAAhC,EAAuC,WAAQ,OAA/C;AAAA;AAAA;AALJ;AADJ;AAnBJ;AADJ;AADJ;AAvBJ,qBADJ;AA0DI;AAAA;AAAA,0BAAK,WAAU,4BAAf;AACI,iFAAe,MAAM,KAAK9F,KAAL,CAAWa,IAAhC;AADJ,qBA1DJ;AA6DI,6EAAM,WAAa,mBAAOkF,IAA1B,IAAoC,KAAKhG,KAAzC,IAAgD,QAAQ,KAAKe,MAA7D;AA7DJ,iBADJ;AAgEI;AAAA;AAAA,sBAAK,SAAM,YAAX,EAAwB,IAAG,kBAA3B,EAA8C,UAAS,IAAvD,EAA4D,MAAK,QAAjE,EAA0E,mBAAgB,uBAA1F,EAAkH,eAAY,MAA9H;AACI;AAAA;AAAA,0BAAK,SAAM,cAAX,EAA0B,MAAK,UAA/B;AACI;AAAA;AAAA,8BAAK,SAAM,eAAX;AACI;AAAA;AAAA,kCAAK,SAAM,cAAX;AACI;AAAA;AAAA,sCAAI,SAAM,aAAV,EAAwB,IAAG,uBAA3B;AAAA;AAAA,iCADJ;AAEI;AAAA;AAAA,sCAAQ,MAAK,QAAb,EAAsB,SAAM,OAA5B,EAAoC,gBAAa,OAAjD,EAAyD,cAAW,OAApE;AACI;AAAA;AAAA,0CAAM,eAAY,MAAlB;AAAA;AAAA;AADJ;AAFJ,6BADJ;AAOI;AAAA;AAAA,kCAAK,SAAM,YAAX;AAAA;AAAA,6BAPJ;AAUI;AAAA;AAAA,kCAAK,SAAM,cAAX;AACI;AAAA;AAAA,sCAAQ,MAAK,QAAb,EAAsB,SAAM,mBAA5B,EAAgD,gBAAa,OAA7D;AAAA;AAAA,iCADJ;AAEI;AAAA;AAAA,sCAAQ,MAAK,QAAb,EAAsB,SAAM,iBAA5B;AAAA;AAAA;AAFJ;AAVJ;AADJ;AADJ;AAhEJ,aADJ;AAsFH;;;yCAEgB;;AAEb,iBAAKE,WAAL,GAAmB;AACfC,wBAAQ;AACJC,6BAAS;AADL,iBADO;AAIfC,uBAAO;AACHD,6BAAS;AADN;AAJQ,aAAnB;;AASA,iBAAKF,WAAL,CAAiBI,SAAjB,GAA6B;AACzBC,0BAAU,UADe;AAEzBC,qBAAK,KAFoB;AAGzBC,sBAAM,KAHmB;AAIzBC,2BAAW,uBAJc;AAKzBC,0BAAU,SALe;;AAOzBP,yBAAS;AAPgB,aAA7B;;AAUA,iBAAKqD,QAAL,CAAc,EAAd;;AAEA,gBAAItB,UAAU;AACVC,sBAAM,iBADI;AAEVC,wBAAQ,iBAFE;AAGVC,sBAAM;AAHI,aAAd;;AAOArB,oBAAQC,GAAR,CAAY,iBAAZ;AACA,iBAAKlB,MAAL,CAAYwC,IAAZ,CAAiBC,KAAKC,SAAL,CAAeP,OAAf,CAAjB;AACH;;;0CAEiB;;AAEd,iBAAKjC,WAAL,CAAiBI,SAAjB,GAA6B;AACzBC,0BAAU,UADe;AAEzBC,qBAAK,KAFoB;AAGzBC,sBAAM,KAHmB;AAIzBC,2BAAW,uBAJc;AAKzBC,0BAAU,SALe;;AAOzBP,yBAAS;AAPgB,aAA7B;;AAUA,gBAAIqB,QAAQC,SAASC,cAAT,CAAwB,aAAxB,CAAZ;AACAF,kBAAMG,GAAN,GAAY,IAAZ;AACAP,mBAAOG,WAAP,GAAqB,IAArB;;AAEA,iBAAKiC,QAAL,CAAc,EAAd;;AAGA,gBAAItB,UAAU;AACVC,sBAAM,kBADI;AAEVC,wBAAQ,kBAFE;AAGVC,sBAAM;AAHI,aAAd;;AAMArB,oBAAQC,GAAR,CAAY,kBAAZ;AACA,iBAAKlB,MAAL,CAAYwC,IAAZ,CAAiBC,KAAKC,SAAL,CAAeP,OAAf,CAAjB;AACH;;;wCAEe;AACZlB,oBAAQC,GAAR,CAAY,iBAAZ;;AAEA,iBAAKhB,WAAL,GAAmB;AACfC,wBAAQ;AACJC,6BAAS;AADL,iBADO;AAIfC,uBAAO;AACHD,6BAAS;AADN;AAJQ,aAAnB;;AASA,iBAAKF,WAAL,CAAiBI,SAAjB,GAA6B;AACzBC,0BAAU,UADe;AAEzBC,qBAAK,KAFoB;AAGzBC,sBAAM,KAHmB;AAIzBC,2BAAW,uBAJc;AAKzBC,0BAAU,SALe;;AAOzBP,yBAAS;AAPgB,aAA7B;;AAWA,gBAAI+B,UAAU;AACVC,sBAAM,iBADI;AAEVC,wBAAQ,iBAFE;AAGVC,sBAAM;AAHI,aAAd;;AAMA,iBAAKtC,MAAL,CAAYwC,IAAZ,CAAiBC,KAAKC,SAAL,CAAeP,OAAf,CAAjB;;AAEA,gBAAIV,QAAQC,SAASC,cAAT,CAAwB,aAAxB,CAAZ;AACAF,kBAAMG,GAAN,GAAY,IAAZ;AACAP,mBAAOG,WAAP,GAAqB,IAArB;AACA,iBAAKiC,QAAL,CAAc,EAAd;AACH;;;;EAzdiC,gBAAMyB,S;;kBAAvBlG,Q","file":"index.js","sourceRoot":"/Users/serqeycheremisin/ieltof","sourcesContent":["import React, {Component} from \"react\";\nimport Peer, {DataConnection} from \"peerjs\";\nimport Chat from \"components/Chat\";\nimport QuestionBlock from \"components/QuestionBlock\";\nimport * as TestServices from \"../../services/TestServices\";\nimport styles from \"./TestPage.css\";\nimport classNames from \"classnames\";\nimport PreloaderIcon from \"react-preloader-icon\";\nimport Oval from \"react-preloader-icon/loaders/Oval\";\n\nexport default class TestPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            peer_id: null,\n            username: null,\n            conn: null,\n            call: null,\n            peer: new Peer({\n                host: \"cheremisin.info\",\n                port: 9000,\n                path: '/peerjs',\n                secure: true,\n                config: {\n                    'iceServers': [\n                        {url: 'stun:stun1.l.google.com:19302'},\n                        {\n                            url: 'turn:numb.viagenie.ca',\n                            credential: 'muazkh',\n                            username: 'webrtc@live.com'\n                        }\n                    ]\n                }\n            }),\n            test: null\n        };\n\n        this.socket = new WebSocket(\"wss://cheremisin.info/api/v1/client\");\n\n\n        this.innerStyles = {\n            bStart: {\n                display: 'block'\n            },\n            bNext: {\n                display: 'none'\n            },\n            preloader: {\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                overflow: 'visible',\n\n                display: 'none'\n            }\n        };\n\n        this.requestLocalVideo = this.requestLocalVideo.bind(this);\n        this.onReceiveStream = this.onReceiveStream.bind(this);\n        this.handleMessage = this.handleMessage.bind(this);\n    }\n\n\n    componentDidMount() {\n\n        this.state.peer.on('open', () => {\n            console.log(\"peer open\");\n            this.state.peer_id = this.state.peer.id;\n        });\n\n        this.state.peer.on('connection', (connection) => {\n            console.log('peer.on connection');\n\n            this.state.conn = connection;\n            this.state.peer_id = connection.peer;\n            this.state.conn.on('data', this.handleMessage);\n\n            let call = this.state.peer.call(this.state.peer_id, window.localStream);\n            call.on('stream', (stream) => {\n                window.peer_stream = stream;\n                let video = document.getElementById('peer-camera');\n                video.src = window.URL.createObjectURL(stream);\n                window.peer_stream = stream;\n                // this.onReceiveStream(stream, 'peer-camera');\n            });\n\n        });\n\n        this.state.peer.on('error', function (err) {\n            console.error(err);\n        });\n\n        this.state.peer.on('call', (call) => {\n            console.log('peer.on receive call');\n\n            // let acceptsCall = confirm(\"Videocall incoming, do you want to accept it ?\");\n\n            if (true) {\n                call.answer(window.localStream);\n                call.on('stream', (stream) => {\n                    window.peer_stream = stream;\n                    // this.onReceiveStream(stream, 'peer-camera');\n\n                    let video = document.getElementById('peer-camera');\n                    video.src = window.URL.createObjectURL(stream);\n                    window.peer_stream = stream;\n                });\n\n                call.on('close', () => {\n                    // alert(\"The videocall has finished\");\n                });\n\n            } else {\n                console.log(\"Call denied !\");\n            }\n        });\n\n        this.requestLocalVideo({\n            success: (stream) => {\n                console.log(\"requestLocalVideo success\");\n                window.localStream = stream;\n\n                let video = document.getElementById('my-camera');\n                // video.src = window.HTMLMediaElement.srcObject(stream);\n                video.src = window.URL.createObjectURL(stream);\n                window.peer_stream = stream;\n                // this.onReceiveStream(stream, 'my-camera');\n\n                let message = {\n                    Type: \"token\",\n                    Action: \"token\",\n                    Body: {\n                        token: this.state.peer_id\n                    }\n                };\n                this.socket.send(JSON.stringify(message));\n            },\n            error: (err) => {\n                console.log(\"requestLocalVideo error\");\n                alert(\"Cannot get access to your camera and video !\");\n                console.error(err);\n            }\n        });\n\n        this.socket.onopen = (event) => {\n            console.log(\"Соединение установлено.\");\n        };\n\n        this.socket.onclose = (event) => {\n            if (event.wasClean) {\n                // alert('Соединение закрыто чисто');\n            } else {\n                // alert('Обрыв соединения'); // например, \"убит\" процесс сервера\n            }\n            // alert('Код: ' + event.code + ' причина: ' + event.reason);\n        };\n\n        this.socket.onerror = (error) => {\n            // alert(\"Ошибка \" + error.message);\n        };\n\n        this.socket.onmessage = (event) => {\n\n            let obj = JSON.parse(event.data);\n            console.log(\"event\" + event.data);\n\n            switch (obj.action) {\n                case 'init':\n                    console.log(\"init\" + event.data);\n                    if (obj.status) {\n\n                        this.state.conn = this.state.peer.connect(obj.status, {\n                            metadata: {\n                                'username': \"username\"\n                            }\n                        });\n\n                        this.state.conn.on('data', this.handleMessage);\n\n                        this.innerStyles.preloader = {\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            transform: 'translate(-50%, -50%)',\n\n                            display: 'none'\n                        };\n\n                        this.setState({});\n\n                        let message = {\n                            Type: \"GET_TEST\",\n                            Action: \"GET_TEST\",\n                            Body: {\n                                token: \"\"\n                            }\n                        };\n\n                        this.socket.send(JSON.stringify(message));\n\n                    } else {\n                        console.error(\"error \" + event.data);\n                        console.log(\"You need to provide a peer to connect with !\");\n                        return false;\n                    }\n                    break;\n\n                case 'init2':\n\n                    this.innerStyles.preloader = {\n                        position: 'absolute',\n                        top: '50%',\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)',\n                        overflow: 'visible',\n\n                        display: 'none'\n                    }\n                    this.setState({});\n\n                    let message = {\n                        Type: \"GET_TEST\",\n                        Action: \"GET_TEST\",\n                        Body: {\n                            token: \"\"\n                        }\n                    };\n                    this.socket.send(JSON.stringify(message));\n\n                    break;\n\n                case 'STOP_VIDEO_CHAT':\n\n                    break;\n\n                case 'DISCONNECTED_PAIR':\n                    let video = document.getElementById('peer-camera');\n                    video.src = null;\n                    window.peer_stream = null;\n                    this.setState({});\n                    break;\n\n                case 'sendMessage':\n                    console.log(\"sendMessage\");\n                    TestServices.onChatMessage(obj.status);\n                    break;\n\n                case 'GET_TEST':\n                    console.log('GET_TEST');\n                    console.log(obj.body);\n                    TestServices.onTestQuestions(obj.body);\n                    break;\n            }\n        };\n    }\n\n    requestLocalVideo(callbacks) {\n        // Monkeypatch for crossbrowser geusermedia\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n\n        // Request audio an video\n        navigator.getUserMedia({audio: true, video: true}, callbacks.success, callbacks.error);\n    }\n\n    handleMessage(data) {\n        let orientation = \"text-left\";\n\n        // If the message is yours, set text to right !\n        if (data.from == username) {\n            orientation = \"text-right\"\n        }\n\n        let messageHTML = '<a href=\"javascript:void(0);\" class=\"list-group-item' + orientation + '\">';\n        messageHTML += '<h4 class=\"list-group-item-heading\">' + data.from + '</h4>';\n        messageHTML += '<p class=\"list-group-item-text\">' + data.text + '</p>';\n        messageHTML += '</a>';\n\n        document.getElementById(\"messages\").innerHTML += messageHTML;\n\n        this.state({});\n    }\n\n    onReceiveStream(stream, element_id) {\n\n        let video = document.getElementById(element_id);\n        video.src = window.URL.createObjectURL(stream);\n        window.peer_stream = stream;\n    }\n\n    componentWillUnmount() {\n        this.state.peer.disconnect();\n    }\n\n    render() {\n        return (\n            <div id=\"app\" className=\"container-fluid app\">\n                <div className=\"row test-container\">\n                    <div className=\"col-sm-6 video-chat section section-1\">\n                        <div className=\"video-1\">\n                            <div className=\"video-1-peer\">\n                                <div className=\"text-center video-1-1 video-1-1-peer\">\n                                    <video id=\"peer-camera\" className=\"peer-camera center-block\"\n                                           autoplay=\"autoplay\"></video>\n                                    <span className=\"label label-info\" id=\"connected_peer\"></span>\n                                </div>\n                                <div className=\"text-center video-1-1 video-1-1-my\">\n                                    <video id=\"my-camera\" className=\"my-camera center-block\" autoplay=\"autoplay\"\n                                           muted=\"true\"></video>\n                                </div>\n                            </div>\n                            <div style={this.innerStyles.preloader}>\n                                <PreloaderIcon\n                                    loader={Oval}\n                                    size={80}\n                                    strokeWidth={8} // min: 1, max: 50\n                                    strokeColor=\"#F0AD4E\"\n                                    duration={800}\n                                />\n                            </div>\n                        </div>\n                        <div >\n                            <div className={classNames({\"container\": true, [styles.connection_manager]: true})}>\n                                <div className={classNames({\"row\": true, [styles.row_container]: true})}>\n                                    <div className=\"col-sm-6\">\n                                        <button style={this.innerStyles.bStart} onClick={this.startVideoChat.bind(this)}\n                                                type=\"button\"\n                                                className={classNames({\n                                                    \"btn btn-primary\": true,\n                                                    [styles.button_start]: true\n                                                })}>\n                                            <span className=\"tr\" data-tr-id=\"1232\" data-tr=\"start\">start</span>\n                                        </button>\n                                        <button style={this.innerStyles.bNext} onClick={this.findNextPartner.bind(this)}\n                                                type=\"button\"\n                                                className={classNames({\n                                                    \"btn btn-primary\": true,\n                                                    [styles.button_start]: true\n                                                })}>\n                                            <span className=\"tr\" data-tr-id=\"1232\" data-tr=\"start\">next</span>\n                                        </button>\n                                    </div>\n                                    <div className=\"col-sm-6\">\n                                        <button type=\"button\" onClick={this.stopVideoChat.bind(this)}\n                                                className={classNames({\n                                                    \"btn btn-primary\": true,\n                                                    [styles.button_stop]: true\n                                                })}>\n                                            <span className=\"tr\" data-tr-id=\"1232\" data-tr=\"start\">stop</span>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-6 section section-2\">\n                        <QuestionBlock test={this.state.test}/>\n                    </div>\n                    <Chat className = {styles.chat} {...this.props} socket={this.socket}/>\n                </div>\n                <div class=\"modal fade\" id=\"exampleModalLong\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n                    <div class=\"modal-dialog\" role=\"document\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Modal title</h5>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div class=\"modal-body\">\n                                ...\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    startVideoChat() {\n\n        this.innerStyles = {\n            bStart: {\n                display: 'none'\n            },\n            bNext: {\n                display: 'block'\n            }\n        };\n\n        this.innerStyles.preloader = {\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            overflow: 'visible',\n\n            display: 'block'\n        };\n\n        this.setState({});\n\n        let message = {\n            Type: \"INIT_VIDEO_CHAT\",\n            Action: \"INIT_VIDEO_CHAT\",\n            Body: {}\n        };\n\n\n        console.log(\"INIT_VIDEO_CHAT\");\n        this.socket.send(JSON.stringify(message));\n    }\n\n    findNextPartner() {\n\n        this.innerStyles.preloader = {\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            overflow: 'visible',\n\n            display: 'block'\n        };\n\n        let video = document.getElementById('peer-camera');\n        video.src = null;\n        window.peer_stream = null;\n\n        this.setState({});\n\n\n        let message = {\n            Type: \"GET_NEXT_PARTNER\",\n            Action: \"GET_NEXT_PARTNER\",\n            Body: {}\n        };\n\n        console.log(\"GET_NEXT_PARTNER\");\n        this.socket.send(JSON.stringify(message));\n    }\n\n    stopVideoChat() {\n        console.log(\"STOP_VIDEO_CHAT\");\n\n        this.innerStyles = {\n            bStart: {\n                display: 'block'\n            },\n            bNext: {\n                display: 'none'\n            }\n        };\n\n        this.innerStyles.preloader = {\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            overflow: 'visible',\n\n            display: 'none'\n        };\n\n\n        let message = {\n            Type: \"STOP_VIDEO_CHAT\",\n            Action: \"STOP_VIDEO_CHAT\",\n            Body: {}\n        };\n\n        this.socket.send(JSON.stringify(message));\n\n        let video = document.getElementById('peer-camera');\n        video.src = null;\n        window.peer_stream = null;\n        this.setState({});\n    }\n}\n\n"]}]}